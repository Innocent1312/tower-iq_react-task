{"version":3,"sources":["api/getUsers.js","redux/store.js","components/Loader/Loader.js","components/Pagination/Pagination.js","components/App/index.js","components/App/App.js","index.js"],"names":["getUsers","a","async","fetch","response","ok","Error","json","store","createStore","state","action","type","isLoading","usersList","isLoaded","isError","page","applyMiddleware","thunk","connect","loadUsers","dispatch","data","className","onClick","setPage","totalAmountOfPages","numberOfPages","i","Math","ceil","push","pageNumber","map","number","key","length","setNextButtonToDisabled","App","indexOfLastItem","indexOfFirstItem","users","slice","user","id","name","surname","desc","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.34341060.chunk.js","sourcesContent":["const URL = 'https://innocent1312.github.io/tower-iq_react-task/users.json';\n\nconst getUsers = async () => {\n  const response = await fetch(URL);\n\n  if (!response.ok) {\n    throw new Error(`Something went wrong`)\n  }\n\n  return response.json();\n};\n\nexport default getUsers;","import { createStore, applyMiddleware } from 'redux';\nimport thunk from 'redux-thunk';\nimport getUsers from \"../api/getUsers\";\n\nconst START_LOAD = 'START_LOAD';\nconst HANDLE_SUCCESS = 'HANDLE_SUCCESS';\nconst HANDLE_ERROR = 'HANDLE_ERROR';\nconst SET_PAGE = 'SET_PAGE';\n\nexport const startLoad = () => ({ type: START_LOAD });\nexport const handleError = () => ({ type: HANDLE_ERROR });\nexport const setPage = (page)  => ({\n  type: SET_PAGE,\n  page,\n});\n\nexport const handleSuccess = usersList => ({\n  type: HANDLE_SUCCESS, usersList,\n});\n\nexport const loadUsers = () => async(dispatch) => {\n  dispatch(startLoad());\n\n  try {\n    const data = await getUsers();\n    dispatch(handleSuccess(data))\n  }\n  catch (e) {\n    dispatch(handleError())\n  }\n};\n\nconst reducer = (state, action) => {\n  switch (action.type) {\n    case START_LOAD:\n      return {\n        ...state,\n        isLoading: true,\n      };\n\n    case HANDLE_SUCCESS:\n      return {\n        ...state,\n        usersList: action.usersList,\n        isLoaded: true,\n      };\n\n    case HANDLE_ERROR:\n      return {\n        ...state,\n        isLoaded: false,\n        isLoading: false,\n        isError: true\n      };\n\n    case SET_PAGE:\n      return {\n        ...state,\n        page: action.page,\n      };\n\n    default:\n      return state;\n  }\n};\n\nconst initialState = {\n  usersList: {},\n  isLoaded: false,\n  isLoading: false,\n  isError: false,\n  page: 1,\n};\n\nconst store = createStore(reducer, initialState, applyMiddleware(thunk));\n\nexport default store;","import React from 'react';\nimport { connect } from 'react-redux';\nimport { loadUsers } from '../../redux/store';\n\nconst Loader = ({ isLoading, isError, loadUsers }) => (\n  <>\n  <div className=\"alert alert-error\">\n    {isError ? 'Something went wrong' : null}\n  </div>\n    <button\n      type=\"button\"\n      className=\"btn btn-success btn-lg align-middle loader-button\"\n      onClick={async () => {\n        await loadUsers()\n      }}\n    >\n      {isLoading ? 'Loading...' : 'Load'}\n    </button>\n  </>\n);\n\nconst mapStateToProps = state => ({\n  isLoading: state.isLoading,\n  isError: state.isError,\n});\n\nexport default connect(\n  mapStateToProps,\n  { loadUsers }\n)(Loader);","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { setPage } from '../../redux/store';\nimport { connect } from \"react-redux\";\nimport './Pagination.scss'\n\nconst Pagination = ({ page, totalAmountOfPages, setPage }) => {\n  const numberOfPages = [];\n\n  for (let i = 1; i <= Math.ceil(totalAmountOfPages / 5); i += 1) {\n    numberOfPages.push(i);\n  }\n\n  const setPrevButtonToDisabled = (pageNumber) => {\n    let pageClass;\n    pageNumber <= 1\n      ? pageClass = 'button-disabled'\n      : pageClass = '';\n\n    return pageClass;\n  };\n\n  const setNextButtonToDisabled = (pageNumber) => {\n    let pageClass;\n    pageNumber === numberOfPages.length\n      ? pageClass = 'button-disabled'\n      : pageClass = '';\n\n    return pageClass;\n  };\n\n  return (\n    <>\n      <ul className=\"button-list\">\n        <li className={setPrevButtonToDisabled(page)}>\n          <button\n            className=\"btn btn-danger\"\n            type=\"button\"\n            onClick={() => setPage(page - 1)}\n          >\n            Previous\n          </button>\n        </li>\n\n        {numberOfPages.map(number => (\n          <li key={number}>\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={() => setPage(number)}\n            >\n              {number}\n            </button>\n          </li>\n        ))}\n\n        <li className={setNextButtonToDisabled(page)}>\n          <button\n            className=\"btn btn-danger\"\n            type=\"button\"\n            onClick={() => setPage(page + 1)}\n          >\n            Next\n          </button>\n        </li>\n      </ul>\n    </>\n  );\n};\n\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  totalAmountOfPages: PropTypes.number.isRequired,\n  setPage: PropTypes.func.isRequired,\n};\n\nconst mapStateToProps = state => ({\n  page: state.page,\n});\n\nexport default connect(\n  mapStateToProps,\n  { setPage }\n)(Pagination);","import App from './App';\n\nexport default App;","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport Loader from \"../Loader/Loader\";\nimport Pagination from \"../Pagination/Pagination\";\n\nimport './App.scss';\n\n\nconst App = ({ usersList, isLoaded, page }) => {\n  const indexOfLastItem = page * 5;\n  const indexOfFirstItem = indexOfLastItem - 5;\n\n  return (\n    <div className=\"container\">\n      {isLoaded\n        ? (\n          <div className=\"jumbotron\">\n            <h1 className=\"display-6\">TowerIQ Task !</h1>\n            <p className=\"lead\">Page: {page}</p>\n\n            <table className=\"table table-hover app-table\">\n              <tbody>\n              {usersList.users\n                .slice(indexOfFirstItem, indexOfLastItem)\n                .map(user => (\n                  <tr key={user.id}>\n                    <td>{user.id}</td>\n                    <td>{user.name}</td>\n                    <td>{user.surname}</td>\n                    <td>{user.desc}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n\n            <Pagination totalAmountOfPages={usersList.users.length}/>\n          </div>\n        )\n        : (\n            <Loader/>\n        )\n      }\n    </div>\n  )\n};\n\nconst mapStateToProps = state => ({\n  usersList: state.usersList,\n  isLoaded: state.isLoaded,\n  page: state.page,\n});\n\nApp.propTypes = {\n  usersList: PropTypes.shape({\n    users: PropTypes.arrayOf(PropTypes.objectOf(PropTypes.string))\n  }).isRequired,\n  isLoaded: PropTypes.bool.isRequired,\n  page: PropTypes.number.isRequired,\n};\n\nexport default connect(\n  mapStateToProps,\n  {}\n)(App);\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport store from './redux/store';\nimport App from './components/App';\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}